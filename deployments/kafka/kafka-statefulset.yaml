apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kafka
#      name: kafka
  serviceName: kafka-service
  template:
    metadata:
      labels:
        app: kafka
      name: kafka
    spec:
      containers:
        - name: kafka
          image: wurstmeister/kafka
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_ADVERTISED_PORT
              value: "9092"
#            - name: KAFKA_ADVERTISED_HOST_NAME
#              value: "127.0.0.1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper-0.zookeeper-service.default.svc.cluster.local:2181,\
              zookeeper-1.zookeeper-service.default.svc.cluster.local:2181,\
              zookeeper-2.zookeeper-service.default.svc.cluster.local:2181"
          command:
            - sh
            - -c
          args:
            - "export KAFKA_BROKER_ID=${HOSTNAME##*-};export KAFKA_ADVERTISED_HOST_NAME=kafka-${HOSTNAME##*-}.\
            kafka-service.default.svc.cluster.local;exec start-kafka.sh"
          volumeMounts:
            - name: kafka-persistent-storage
              mountPath: /kafka
      volumes:
        - name: kafka-persistent-storage
          persistentVolumeClaim:
            claimName: kafka-pv-claim

      nodeSelector: #master
       node-role.kubernetes.io/master: ''

